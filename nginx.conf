events{
    #maximum number of simultenaous connection per worker
    worker_connections 1024;
}
http{
    include /etc/nginx/mime.types;
    #serving static file efficiently 
    sendfile on;
    #keep connection alive for 65 secods 
    keepalive_timeout 65;
     # Configure a disk-based cache
    # - Location: /temp/cache
    # - levels: Subdirectory depth (1 char and 2 chars)
    # - keys_zone: Named "my_cache" and uses 10MB memory to track keys
    # - inactive: Cache unused content for 60s before removal
    # - max_size: Limit cache size to 100MB
    proxy_cache_path /temp/cache levels=1:2 keys_zone=my_cache:10m inactive=60s max_size=100m;

    server{
        listen 80;
server_name localhost;

location / {
    root /usr/share/nginx/html;
     index index.html index.htm;
       # If file not found, return 404
     try_files $uri $uri/ =404;
}
location /api/message {
     # Forward this request to the Node.js container
   proxy_pass http://node-api:3000;

             # Pass headers to help backend know original request info
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache my_cache;
            proxy_cache_valid 200 10s;

             # Add a response header to indicate whether the response was a HIT, MISS, or EXPIRED
            add_header X-Cache-Status $upstream_cache_status;
}
    }
}